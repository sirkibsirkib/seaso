# One seal is broken, but which depends on whether the flag `sub` is enabled.

part defns {
	decl person@defns = person. name@defns = name.

	defn name(str). person(name).
	seal name.
}

part normal_breaker {
	decl person@defns = person.

	# if `sub` is
	# DISABLED => `name` seal is broken.
	#  ENABLED => no seal break. N must already be a name.
	rule N :- person(N).
}

part subconsequent_breaker {
	decl person@defns = person. name@defns = name.

	# if `sub` is
	# DISABLED => no seal break. person is unsealed and name is unchanged. 
	#  ENABLED => `name` seal is broken; it is an implicit consequent.
	rule person(name("bob")).
}