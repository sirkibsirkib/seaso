# this demonstrates a simple use case of Seaso _describing_ a search problem.
# `missing_consent` is explicitly undesirable, present, and difeasible.
# `consented` is not sealed, and so rules inferring it can be added.
# The problem: add rules inferring `consented` minimising `missing_consent`.

defn person(str). processing(int).
     uses_data_of(processing,person).
     consented(person,processing).

defn missing_consent(processing,person). 

rule Pr, Pe :- uses_data_of(Pr,Pe).
rule missing_consent(Pr,Pe) :- uses_data_of(Pr,Pe), !consented(Pe,Pr).

emit missing_consent.

seal person. processing. uses_data_of. missing_consent.

rule uses_data_of(processing(1),person("Amy")).
rule uses_data_of(processing(2),person("Bob")).	