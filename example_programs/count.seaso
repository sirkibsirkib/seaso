defn next(item,item). items(). notFirst(item). notLast(item). 
     suc(int,int). idx(item,int). count(int). decl item. 
rule I, J, notLast(I), notFirst(J) :- next(I,J).
     idx(I,0), items() :- I, !notFirst(I).
     idx(J,B)          :- idx(I,A), next(I,J), suc(A,B).
     count(B) :- idx(I,A), !notLast(I), suc(A,B). count(0) :- !items().
seal items. notFirst. notLast. idx. count. 
rule suc(0,1). suc(1,2). suc(2,3). suc(3,4).
defn item(str). rule next(item("X"),item("Y")).